# Generated by Django 5.2.4 on 2025-08-31 05:23

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('employer', '0006_remove_jobapplication_fit_score_and_more'),
        ('jobseaker', '0002_jobseekerprofile_dream_companies_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIRemarks',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_fit', models.BooleanField(blank=True, help_text='AI determination if candidate is suitable for the role', null=True, verbose_name='fit for the job')),
                ('fit_score', models.DecimalField(blank=True, decimal_places=2, help_text='AI-calculated percentage match between candidate and job requirements', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='fit percentage (0-100%)')),
                ('fit_level', models.CharField(choices=[('excellent', 'Excellent fit'), ('good', 'Good fit'), ('moderate', 'Moderate fit'), ('poor', 'Poor fit'), ('unknown', 'Unknown')], db_index=True, default='unknown', max_length=20, verbose_name='fit level')),
                ('remarks', models.TextField(blank=True, help_text='AI-generated detailed analysis and recommendations', verbose_name='remarks')),
                ('skills_match_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='skills match score')),
                ('experience_match_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='experience match score')),
                ('education_match_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='education match score')),
                ('location_match_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='location compatibility score')),
                ('analysis_status', models.CharField(choices=[('pending', 'Pending analysis'), ('completed', 'Analysis completed'), ('failed', 'Analysis failed'), ('skipped', 'Analysis skipped')], db_index=True, default='pending', max_length=20, verbose_name='analysis status')),
                ('ai_model_version', models.CharField(blank=True, help_text='Version of the AI model used for analysis', max_length=50, verbose_name='AI model version')),
                ('confidence_score', models.DecimalField(blank=True, decimal_places=2, help_text='How confident the AI is in its analysis', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='AI confidence score')),
                ('strengths', models.JSONField(blank=True, default=list, help_text='List of identified candidate strengths', verbose_name='candidate strengths')),
                ('weaknesses', models.JSONField(blank=True, default=list, help_text='List of areas where candidate may need development', verbose_name='areas for improvement')),
                ('missing_skills', models.JSONField(blank=True, default=list, help_text='Skills required for the job but not found in candidate profile', verbose_name='missing skills')),
                ('matching_skills', models.JSONField(blank=True, default=list, help_text='Skills that match between job requirements and candidate', verbose_name='matching skills')),
                ('recommendations', models.JSONField(blank=True, default=list, help_text='Specific recommendations for the hiring decision', verbose_name='AI recommendations')),
                ('interview_recommendation', models.BooleanField(blank=True, help_text='AI recommendation to proceed with interview', null=True, verbose_name='recommend for interview')),
                ('suggested_interview_questions', models.JSONField(blank=True, default=list, help_text='AI-generated relevant interview questions', verbose_name='suggested interview questions')),
                ('potential_concerns', models.JSONField(blank=True, default=list, help_text='Areas of potential risk or concern identified by AI', verbose_name='potential concerns')),
                ('salary_expectation_alignment', models.CharField(blank=True, choices=[('aligned', 'Aligned'), ('too_high', 'Too high'), ('too_low', 'Too low'), ('unknown', 'Unknown')], max_length=20, verbose_name='salary expectation alignment')),
                ('analysis_duration_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='analysis duration (seconds)')),
                ('error_message', models.TextField(blank=True, help_text='Error message if analysis failed', verbose_name='error message')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analyzed_at', models.DateTimeField(blank=True, null=True, verbose_name='analysis completion time')),
                ('reviewed_by_human', models.BooleanField(default=False, verbose_name='reviewed by human recruiter')),
                ('human_override', models.BooleanField(default=False, verbose_name='human override of AI decision')),
                ('human_remarks', models.TextField(blank=True, verbose_name='human recruiter remarks')),
                ('job_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_remarks', to='employer.jobpost', verbose_name='Job Post')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_remarks', to='jobseaker.jobseekerprofile', verbose_name='Job Seeker')),
            ],
            options={
                'verbose_name': 'AI Remark',
                'verbose_name_plural': 'AI Remarks',
                'db_table': 'ai_remarks',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['job_post', 'fit_score'], name='ai_remarks_job_pos_382892_idx'), models.Index(fields=['job_seeker', 'fit_score'], name='ai_remarks_job_see_b441cf_idx'), models.Index(fields=['fit_level', 'analysis_status'], name='ai_remarks_fit_lev_84bb10_idx'), models.Index(fields=['is_fit', 'interview_recommendation'], name='ai_remarks_is_fit_afd7fe_idx'), models.Index(fields=['analysis_status', 'created_at'], name='ai_remarks_analysi_eb1eca_idx'), models.Index(fields=['reviewed_by_human', 'fit_score'], name='ai_remarks_reviewe_db104f_idx')],
                'unique_together': {('job_post', 'job_seeker')},
            },
        ),
    ]
