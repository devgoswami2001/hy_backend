# Generated by Django 5.2.4 on 2025-07-26 08:36

import django.core.validators
import django.db.models.deletion
import employer.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('company_name', models.CharField(db_index=True, max_length=255, verbose_name='company name')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('designation', models.CharField(max_length=100, verbose_name='designation')),
                ('description', models.TextField(blank=True, verbose_name='company description')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logos/', validators=[employer.models.validate_image], verbose_name='company logo')),
                ('active_jobs_count', models.PositiveIntegerField(default=0)),
                ('total_applications_count', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'employer'}, on_delete=django.db.models.deletion.CASCADE, related_name='employer_profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'Employer Profile',
                'verbose_name_plural': 'Employer Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='title')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('content', models.TextField(verbose_name='content')),
                ('image', models.ImageField(blank=True, null=True, upload_to=employer.models.upload_to_post_image, validators=[employer.models.validate_image], verbose_name='image')),
                ('video', models.FileField(blank=True, null=True, upload_to=employer.models.upload_to_post_video, validators=[employer.models.validate_video], verbose_name='video')),
                ('document', models.FileField(blank=True, null=True, upload_to=employer.models.upload_to_post_document, validators=[django.core.validators.FileExtensionValidator(['pdf', 'doc', 'docx', 'txt'])], verbose_name='attachment/document')),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('jobseekers_only', 'Only Jobseekers'), ('internal', 'Only HR/Employer')], db_index=True, default='public', max_length=50, verbose_name='visibility')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='allow comments')),
                ('is_pinned', models.BooleanField(db_index=True, default=False, verbose_name='pin this post')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('comments_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('shares_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'employer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='posted by')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_posts', to='employer.employerprofile', verbose_name='employer profile')),
            ],
            options={
                'verbose_name': 'Company Post',
                'verbose_name_plural': 'Company Posts',
                'ordering': ['-is_pinned', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HRUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('role', models.CharField(choices=[('HR Manager', 'HR Manager'), ('Recruiter', 'Recruiter'), ('Interviewer', 'Interviewer')], db_index=True, max_length=50, verbose_name='HR role')),
                ('can_post_jobs', models.BooleanField(default=False, verbose_name='can post jobs')),
                ('can_view_applicants', models.BooleanField(default=True, verbose_name='can view applicants')),
                ('can_edit_profile', models.BooleanField(default=False, verbose_name='can edit profile')),
                ('can_post_feed', models.BooleanField(default=False, verbose_name='can post feed')),
                ('can_manage_team', models.BooleanField(default=False, verbose_name='can manage team')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hr_team', to='employer.employerprofile', verbose_name='employer profile')),
                ('user', models.OneToOneField(limit_choices_to={'role': 'employer'}, on_delete=django.db.models.deletion.CASCADE, related_name='hr_user', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'HR User',
                'verbose_name_plural': 'HR Users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='job title')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('employment_type', models.CharField(choices=[('Full-time', 'Full-time'), ('Part-time', 'Part-time'), ('Internship', 'Internship'), ('Contract', 'Contract')], db_index=True, default='Full-time', max_length=50, verbose_name='employment type')),
                ('experience_level', models.CharField(choices=[('Entry-level', 'Entry-level'), ('Mid-level', 'Mid-level'), ('Senior-level', 'Senior-level')], db_index=True, default='Mid-level', max_length=50, verbose_name='experience level')),
                ('working_mode', models.CharField(choices=[('On-site', 'On-site'), ('Hybrid', 'Hybrid'), ('Remote', 'Remote')], db_index=True, default='On-site', max_length=50, verbose_name='working mode')),
                ('location', models.CharField(db_index=True, max_length=255, verbose_name='location')),
                ('salary_min', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='min salary')),
                ('salary_max', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='max salary')),
                ('deadline', models.DateField(db_index=True, verbose_name='application deadline')),
                ('required_skills', models.JSONField(blank=True, default=list, verbose_name='required skills')),
                ('screening_questions', models.JSONField(blank=True, default=list, verbose_name='screening questions')),
                ('applications_count', models.PositiveIntegerField(default=0)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='is active')),
                ('is_featured', models.BooleanField(default=False, verbose_name='is featured')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_posts', to='employer.employerprofile', verbose_name='employer profile')),
                ('created_by', models.ForeignKey(limit_choices_to={'role': 'employer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'Job Post',
                'verbose_name_plural': 'Job Posts',
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('cover_letter', models.TextField(blank=True, verbose_name='cover letter')),
                ('resume', models.FileField(upload_to=employer.models.upload_to_resume, validators=[employer.models.validate_resume], verbose_name='resume')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('under_review', 'Under Review'), ('shortlisted', 'Shortlisted'), ('interview_scheduled', 'Interview Scheduled'), ('offer_made', 'Offer Made'), ('hired', 'Hired'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], db_index=True, default='applied', max_length=30, verbose_name='status')),
                ('is_fit', models.BooleanField(blank=True, null=True, verbose_name='fit for the job')),
                ('fit_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='fit percentage (0-100%)')),
                ('remarks', models.TextField(blank=True, verbose_name='remarks')),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('applied_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('applicant', models.ForeignKey(limit_choices_to={'role': 'jobseeker'}, on_delete=django.db.models.deletion.CASCADE, related_name='job_applications', to=settings.AUTH_USER_MODEL, verbose_name='applicant')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_applications', to=settings.AUTH_USER_MODEL, verbose_name='reviewed by')),
                ('job_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='employer.jobpost', verbose_name='job post')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(db_index=True, default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(verbose_name='comment')),
                ('likes_count', models.PositiveIntegerField(default=0)),
                ('replies_count', models.PositiveIntegerField(default=0)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='employer.postcomment', verbose_name='parent comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='employer.companypost', verbose_name='post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='commented by')),
            ],
            options={
                'verbose_name': 'Post Comment',
                'verbose_name_plural': 'Post Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_likes', to=settings.AUTH_USER_MODEL, verbose_name='liked by')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='employer.postcomment', verbose_name='comment')),
            ],
            options={
                'verbose_name': 'Comment Like',
                'verbose_name_plural': 'Comment Likes',
                'ordering': ['-liked_at'],
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_details', to='employer.companypost', verbose_name='post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_likes', to=settings.AUTH_USER_MODEL, verbose_name='liked by')),
            ],
            options={
                'verbose_name': 'Post Like',
                'verbose_name_plural': 'Post Likes',
                'ordering': ['-liked_at'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('employer', 'Employer'), ('hr', 'HR User')], db_index=True, max_length=20, verbose_name='actor role')),
                ('action', models.CharField(choices=[('job_created', 'Job Created'), ('job_updated', 'Job Updated'), ('job_deleted', 'Job Deleted'), ('application_viewed', 'Application Viewed'), ('status_changed', 'Application Status Changed'), ('interview_scheduled', 'Interview Scheduled'), ('profile_updated', 'Profile Updated'), ('feed_posted', 'Feed Posted'), ('comment_added', 'Comment Added'), ('user_login', 'User Login'), ('user_logout', 'User Logout'), ('other', 'Other')], db_index=True, max_length=50, verbose_name='action type')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('target_model', models.CharField(blank=True, max_length=100, verbose_name='target model')),
                ('target_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='target object ID')),
                ('message', models.TextField(blank=True, verbose_name='description/message')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='timestamp')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='actor')),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp'], name='employer_ac_timesta_0d5881_idx'), models.Index(fields=['action'], name='employer_ac_action_c6b86b_idx'), models.Index(fields=['user', 'timestamp'], name='employer_ac_user_id_cb538d_idx'), models.Index(fields=['content_type', 'object_id'], name='employer_ac_content_dc6424_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='employerprofile',
            index=models.Index(fields=['company_name'], name='employer_em_company_5528d9_idx'),
        ),
        migrations.AddIndex(
            model_name='employerprofile',
            index=models.Index(fields=['slug'], name='employer_em_slug_3affdd_idx'),
        ),
        migrations.AddIndex(
            model_name='employerprofile',
            index=models.Index(fields=['created_at'], name='employer_em_created_40a824_idx'),
        ),
        migrations.AddIndex(
            model_name='companypost',
            index=models.Index(fields=['title'], name='employer_co_title_dcb308_idx'),
        ),
        migrations.AddIndex(
            model_name='companypost',
            index=models.Index(fields=['visibility'], name='employer_co_visibil_b43cb0_idx'),
        ),
        migrations.AddIndex(
            model_name='companypost',
            index=models.Index(fields=['is_pinned'], name='employer_co_is_pinn_252904_idx'),
        ),
        migrations.AddIndex(
            model_name='companypost',
            index=models.Index(fields=['is_active'], name='employer_co_is_acti_7f457a_idx'),
        ),
        migrations.AddIndex(
            model_name='companypost',
            index=models.Index(fields=['company', 'is_active'], name='employer_co_company_71a73a_idx'),
        ),
        migrations.AddIndex(
            model_name='companypost',
            index=models.Index(fields=['created_at'], name='employer_co_created_b2da06_idx'),
        ),
        migrations.AddIndex(
            model_name='hruser',
            index=models.Index(fields=['role'], name='employer_hr_role_3ae9c1_idx'),
        ),
        migrations.AddIndex(
            model_name='hruser',
            index=models.Index(fields=['company'], name='employer_hr_company_aa4dc7_idx'),
        ),
        migrations.AddConstraint(
            model_name='hruser',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('user',), name='unique_hr_user_per_account'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['title'], name='employer_jo_title_b4535b_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['location'], name='employer_jo_locatio_fc5e66_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['employment_type'], name='employer_jo_employm_8a49df_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['experience_level'], name='employer_jo_experie_3e682b_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['working_mode'], name='employer_jo_working_1399a4_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['deadline'], name='employer_jo_deadlin_b917bc_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['is_active'], name='employer_jo_is_acti_3abda8_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['is_featured'], name='employer_jo_is_feat_87647c_idx'),
        ),
        migrations.AddIndex(
            model_name='jobpost',
            index=models.Index(fields=['company', 'is_active'], name='employer_jo_company_5d2dc0_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['status'], name='employer_jo_status_43515a_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['applied_at'], name='employer_jo_applied_b48d56_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['job_post', 'status'], name='employer_jo_job_pos_6244f4_idx'),
        ),
        migrations.AddIndex(
            model_name='jobapplication',
            index=models.Index(fields=['applicant', 'status'], name='employer_jo_applica_90b093_idx'),
        ),
        migrations.AddConstraint(
            model_name='jobapplication',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('job_post', 'applicant'), name='unique_application_per_jobseeker'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['post', 'created_at'], name='employer_po_post_id_ac0479_idx'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['user'], name='employer_po_user_id_0fdbed_idx'),
        ),
        migrations.AddIndex(
            model_name='postcomment',
            index=models.Index(fields=['parent'], name='employer_po_parent__26bdb4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='commentlike',
            unique_together={('comment', 'user')},
        ),
        migrations.AddIndex(
            model_name='postlike',
            index=models.Index(fields=['post', 'liked_at'], name='employer_po_post_id_941e01_idx'),
        ),
        migrations.AddIndex(
            model_name='postlike',
            index=models.Index(fields=['user', 'liked_at'], name='employer_po_user_id_d77c6b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='postlike',
            unique_together={('post', 'user')},
        ),
    ]
